<!-- plugins/redmine_status_scripts/app/views/status_scripts/edit.html.erb -->
<h2>Status Script bearbeiten</h2>

<%= form_with model: @status_script_config, url: status_script_path(@status_script_config), method: :patch, local: true do |f| %>
  <% if @status_script_config.errors.any? %>
    <div id="errorExplanation">
      <ul>
        <% @status_script_config.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="box tabular">
    <p>
      <%= f.label :name, 'Name*' %>
      <%= f.text_field :name, required: true, size: 60 %>
    </p>

    <p>
      <%= f.label :description, 'Beschreibung' %>
      <%= f.text_area :description, rows: 3, cols: 60 %>
    </p>

    <p>
      <%= f.label :from_status_id, 'Von Status' %>
      <%= f.select :from_status_id, 
                   options_from_collection_for_select(@issue_statuses, :id, :name, @status_script_config.from_status_id),
                   { prompt: 'Jeder Status' } %>
      <em>Leer lassen für alle Ausgangsstatus</em>
    </p>

    <p>
      <%= f.label :to_status_id, 'Zu Status*' %>
      <%= f.select :to_status_id, 
                   options_from_collection_for_select(@issue_statuses, :id, :name, @status_script_config.to_status_id),
                   { prompt: 'Status auswählen...' }, 
                   { required: true } %>
    </p>

    <p>
      <%= f.label :project_id, 'Projekt' %>
      <%= f.select :project_id, 
                   options_from_collection_for_select(@projects, :id, :name, @status_script_config.project_id),
                   { prompt: 'Alle Projekte' } %>
      <em>Leer lassen für alle Projekte</em>
    </p>

    <p>
      <%= f.label :script_type, 'Script-Typ*' %>
      <%= f.select :script_type, 
                   options_for_select([
                     ['Shell Script', 'shell'],
                     ['Webhook (HTTP POST)', 'webhook'],
                     ['Ruby Code', 'ruby']
                   ], @status_script_config.script_type),
                   { prompt: 'Typ auswählen...' },
                   { required: true, id: 'script_type_select', onchange: 'updateScriptFields()' } %>
    </p>

    <div id="webhook_url_field" style="display: none;">
      <p>
        <%= f.label :webhook_url, 'Webhook URL*' %>
        <%= f.url_field :webhook_url, size: 60, placeholder: 'https://your-app.com/webhook' %>
        <em>HTTP POST mit JSON-Daten wird an diese URL gesendet</em>
      </p>
    </div>

    <div id="script_content_field" style="display: none;">
      <p>
        <%= f.label :script_content, 'Script-Inhalt*' %>
        <%= f.text_area :script_content, rows: 15, cols: 80, 
                        placeholder: 'Script-Inhalt hier eingeben...' %>
      </p>
    </div>

    <p>
      <%= f.label :timeout, 'Timeout (Sekunden)' %>
      <%= f.number_field :timeout, min: 1, max: 300, 
                         value: @status_script_config.timeout || 30 %>
      <em>Maximale Ausführungszeit</em>
    </p>

    <p>
      <%= f.check_box :enabled %>
      <%= f.label :enabled, 'Aktiviert' %>
    </p>
  </div>

  <p>
    <%= f.submit 'Speichern', class: 'button' %>
    <%= link_to 'Abbrechen', status_script_path(@status_script_config), class: 'button' %>
  </p>
<% end %>

<script>
function updateScriptFields() {
  var scriptType = document.getElementById('script_type_select').value;
  var webhookField = document.getElementById('webhook_url_field');
  var contentField = document.getElementById('script_content_field');
  var contentTextarea = document.querySelector('#status_script_config_script_content');
  
  if (scriptType === 'webhook') {
    webhookField.style.display = 'block';
    contentField.style.display = 'none';
  } else if (scriptType === 'shell' || scriptType === 'ruby') {
    webhookField.style.display = 'none';
    contentField.style.display = 'block';
    
    // Placeholder basierend auf Script-Typ setzen
    if (scriptType === 'shell') {
      contentTextarea.placeholder = `#!/bin/bash
echo "Issue $REDMINE_ISSUE_ID changed to $REDMINE_NEW_STATUS_NAME"
echo "Project: $REDMINE_PROJECT_NAME"
echo "Subject: $REDMINE_ISSUE_SUBJECT"

# Beispiel: Log-Datei schreiben
echo "$(date): Issue #$REDMINE_ISSUE_ID -> $REDMINE_NEW_STATUS_NAME" >> /tmp/redmine-status.log`;
    } else if (scriptType === 'ruby') {
      contentTextarea.placeholder = `# Zugriff auf Parameter über @variablen
puts "Issue #{@issue_id}: #{@issue_subject}"
puts "Status: #{@old_status_name} → #{@new_status_name}"
puts "Project: #{@project_name}"

# Beispiel: Bedingte Logik
if @new_status_name == 'Erledigt'
  puts "Issue wurde abgeschlossen!"
end`;
    }
  } else {
    webhookField.style.display = 'none';
    contentField.style.display = 'none';
  }
}

// Initial call
document.addEventListener('DOMContentLoaded', function() {
  updateScriptFields();
});
</script>